apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

version = "1.0"
group = "com.sarafinmahtab"

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"


    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 29
        versionCode 1
        versionName project.version

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets { main { assets.srcDirs = ['src/main/assets', 'src/main/assets/'] } }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.1.0'

    implementation 'com.squareup.duktape:duktape-android:1.3.0'

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}


//region bintray


// install is a task defined by the Gradle Maven plugin, which is used to
// publish a maven repo to a local repository. (we actually use the android version of the plugin,
// com.github.dcendents.android-maven, to support AARs)
// https://docs.gradle.org/current/userguide/maven_plugin.html#sec:maven_tasks
install {
    // The repositories property is common to all tasks of type Upload and returns the repositories
    // into which we will upload data. https://docs.gradle.org/current/dsl/org.gradle.api.tasks.Upload.html#org.gradle.api.tasks.Upload:repositories
    // It returns a RepositoryHandler: https://docs.gradle.org/current/dsl/org.gradle.api.artifacts.dsl.RepositoryHandler.html
    repositories {
        // The maven plugin adds a mavenInstaller property to the RepositoryHandler which can be used to
        // add and configure a local maven repository cache.
        // https://docs.gradle.org/current/dsl/org.gradle.api.artifacts.dsl.RepositoryHandler.html#N11785
        mavenInstaller {
            // The object here extends PomFilterContainer so we can configure the pom file here.
            // https://docs.gradle.org/current/javadoc/org/gradle/api/artifacts/maven/PomFilterContainer.html#pom-groovy.lang.Closure-
            pom {
                // Now we are inside a MavenPom object that can be configured. We get the project and configure.
                // https://docs.gradle.org/current/javadoc/org/gradle/api/artifacts/maven/MavenPom.html
                project {
                    name rootProject.name
                    description 'A wrapper of the mathjs.org (https://mathjs.org/) JavaScript library for Android to evaluate math expressions.'
                    url 'https://github.com/sarafinmahtab/MathJsWrapper'
                    packaging 'aar'
                    groupId project.group
                    artifactId 'mathjswrapper'
                    version project.version
                    licenses {
                        license {
                            name 'The Apache Software License, Version 2.0'
                            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }
                    scm {
                        connection 'https://github.com/sarafinmahtab/MathJsWrapper.git'
                        developerConnection 'https://github.com/sarafinmahtab/MathJsWrapper.git'
                        url 'https://github.com/sarafinmahtab/MathJsWrapper'

                    }
                    developers {
                        developer {
                            id = 'sarafinmahtab'
                            name 'Shamsul Arafin Mahtab'
                        }
                    }
                }
            }
        }
    }
}


def bintrayUser = ''
def bintrayKey = ''

//def isCI = System.getenv("TRAVIS")
//if (isCI) {
//    bintrayUser = System.getenv("BINTRAY_USER")
//    bintrayKey = System.getenv("BINTRAY_KEY")
//} else {
//    Properties props = new Properties()
//    props.load(project.rootProject.file('local.properties').newDataInputStream())
//    bintrayUser = props.getProperty('bintray.user')
//    bintrayKey = props.get('bintray.key')
//}

bintray {
    // https://github.com/bintray/gradle-bintray-plugin
    user = bintrayUser
    key = bintrayKey
    configurations = ['archives']
    pkg {
        repo = 'android'
        name = 'MathJsWrapper'
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/sarafinmahtab/MathJsWrapper.git'
        publish = true
        override = true
        version {
            name = project.version
            desc = 'A wrapper of the mathjs.org (https://mathjs.org/) JavaScript library for Android to evaluate math expressions.'
            released = new Date()
            vcsTag = 'v' + project.version
        }
    }
}

//endregion

//region javadoc and sources

// From official sample https://github.com/bintray/bintray-examples/blob/master/gradle-aar-example/build.gradle
task sourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.sourceFiles
}

artifacts {
    archives sourcesJar
}
